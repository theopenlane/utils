env:
  APP_NAME: ${BUILDKITE_PIPELINE_SLUG}
  IMAGE_REPO: ghcr.io/theopenlane/${APP_NAME}
  SONAR_HOST: "https://sonarcloud.io"
steps:
  - group: ":test_tube: tests"
    key: "tests"
    steps:
      - label: ":golangci-lint: lint :lint-roller:"
        cancel_on_build_failing: true
        key: "lint"
        plugins:
          - docker#v5.11.0:
              image: "registry.hub.docker.com/golangci/golangci-lint:v1.60.3"
              command: ["golangci-lint", "run", "-v", "--timeout", "10m", "--config", ".golangci.yaml", "--concurrency", "0"]
              environment:
                - "GOTOOLCHAIN=auto"
      - label: ":golang: go test"
        key: "go_test"
        retry:
          automatic:
            - exit_status: "*"
              limit: 2
        cancel_on_build_failing: true
        plugins:
          - docker#v5.11.0:
              image: golang:1.22.6
              command: ["go", "test", "-coverprofile=coverage.out", "./..."]
        artifact_paths: ["coverage.out"]
  - group: ":closed_lock_with_key: Security Checks"
    depends_on: "go_test"
    key: "security"
    steps:
      - label: ":closed_lock_with_key: gosec"
        key: "gosec"
        plugins:
          - docker#v5.11.0:
              image: "registry.hub.docker.com/securego/gosec:2.20.0"
              command: ["-no-fail", "-exclude-generated", "-fmt sonarqube", "-out", "results.txt", "./..."]
              environment:
                - "GOTOOLCHAIN=auto"
        artifact_paths: ["results.txt"]
      - label: ":github: upload PR reports"
        key: "scan-upload-pr"
        if: build.pull_request.id != null
        depends_on: ["gosec", "go_test"]
        plugins:
          - artifacts#v1.9.4:
              download: "results.txt"
          - artifacts#v1.9.4:
              download: "coverage.out"
              step: "go_test"
          - docker#v5.11.0:
              image: "sonarsource/sonar-scanner-cli:5"
              environment:
                - "SONAR_TOKEN"
                - "SONAR_HOST_URL=$SONAR_HOST"
                - "SONAR_SCANNER_OPTS=-Dsonar.pullrequest.branch=$BUILDKITE_BRANCH -Dsonar.pullrequest.base=$BUILDKITE_PULL_REQUEST_BASE_BRANCH -Dsonar.pullrequest.key=$BUILDKITE_PULL_REQUEST"
      - label: ":github: upload reports"
        key: "scan-upload"
        if: build.branch == "main"
        depends_on: ["gosec", "go_test"]
        plugins:
          - artifacts#v1.9.4:
              download: results.txt
          - artifacts#v1.9.4:
              download: coverage.out
              step: "go_test"
          - docker#v5.11.0:
              image: "sonarsource/sonar-scanner-cli:5"
              environment:
                - "SONAR_TOKEN"
                - "SONAR_HOST_URL=$SONAR_HOST"
