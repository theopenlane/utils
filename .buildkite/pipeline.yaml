env:
  APP_NAME: ${BUILDKITE_PIPELINE_SLUG}
  SONAR_HOST: "https://sonarcloud.io"
steps:
  - group: ":test_tube: Tests"
    key: "tests"
    steps:
      - label: ":golangci-lint: lint :lint-roller:"
        if: build.branch !~ /^renovate\//
        agents:
          queue: $LARGE_RUNNER_QUEUE
          size: $RUNNER_LARGE
          location: "SAT"
        cancel_on_build_failing: true
        timeout_in_minutes: 20
        key: "lint"
        plugins:
          - docker#v5.12.0:
              image: "ghcr.io/theopenlane/build-image:latest"
              command: ["task", "go:lint:ci"]
              always_pull: true
              environment:
                - "GOTOOLCHAIN=auto"
        artifact_paths: ["coverage.out"]
      - label: ":golang: go test"
        key: "go_test"
        cancel_on_build_failing: true
        plugins:
          - docker#v5.12.0:
              image: golang:1.23.3
              always-pull: true
              command: ["go", "test", "-coverprofile=coverage.out", "./..."]
        artifact_paths: ["coverage.out"]
      - label: ":github: upload PR reports"
        key: "scan-upload-pr"
        if: build.pull_request.id != null
        depends_on: ["go_test"]
        plugins:
          - cluster-secrets#v1.0.0:
              variables:
                SONAR_TOKEN: SONAR_TOKEN
          - artifacts#v1.9.4:
              download: "coverage.out"
              step: "go_test"
          - docker#v5.12.0:
              image: "sonarsource/sonar-scanner-cli:11"
              environment:
                - "SONAR_TOKEN"
                - "SONAR_HOST_URL=$SONAR_HOST"
                - "SONAR_SCANNER_OPTS=-Dsonar.pullrequest.branch=$BUILDKITE_BRANCH -Dsonar.pullrequest.base=$BUILDKITE_PULL_REQUEST_BASE_BRANCH -Dsonar.pullrequest.key=$BUILDKITE_PULL_REQUEST"
      - label: ":github: upload reports"
        key: "scan-upload"
        if: build.branch == "main"
        depends_on: ["go_test"]
        plugins:
          - cluster-secrets#v1.0.0:
              variables:
                SONAR_TOKEN: SONAR_TOKEN
          - artifacts#v1.9.4:
              download: coverage.out
              step: "go_test"
          - docker#v5.12.0:
              image: "sonarsource/sonar-scanner-cli:11"
              environment:
                - "SONAR_TOKEN"
                - "SONAR_HOST_URL=$SONAR_HOST"
